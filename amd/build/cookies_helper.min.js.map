{"version":3,"file":"cookies_helper.min.js","sources":["../src/cookies_helper.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * This plugin provides access to Moodle data in form of analytics and reports in real time.\n *\n * @copyright  2020 IntelliBoard, Inc\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @website    https://intelliboard.net/\n */\ndefine([], function() {\n\n    var getCookie = function(name) {\n        var matches = document.cookie.match(new RegExp(\n            \"(?:^|; )\" + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + \"=([^;]*)\"\n        ));\n        return matches ? decodeURIComponent(matches[1]) : 0;\n    };\n\n    var setCookie = function(name, value, options) {\n        options = options || {};\n        var expires = options.expires;\n        if (typeof expires == \"number\" && expires) {\n            var d = new Date();\n            d.setTime(d.getTime() + expires * 1000);\n            expires = options.expires = d;\n        }\n        if (expires && expires.toUTCString) {\n            options.expires = expires.toUTCString();\n        }\n        options.path = \"/\";\n        value = encodeURIComponent(value);\n        var updatedCookie = name + \"=\" + value + (location.protocol === 'https:' ? ';secure' : '');\n        for (var propName in options) {\n            updatedCookie += \"; \" + propName;\n            var propValue = options[propName];\n            if (propValue !== true) {\n                updatedCookie += \"=\" + propValue;\n            }\n        }\n        document.cookie = updatedCookie;\n    };\n\n    /**\n     * Delete IntelliData cookie.\n     *\n     * @param {String} name Cookie name.\n     */\n    function deleteCookie(name) {\n        setCookie(name, \"\", {expires: -1});\n    }\n\n    return {\n        getCookie:getCookie,\n        setCookie:setCookie,\n        deleteCookie:deleteCookie\n    };\n});\n"],"names":["define","setCookie","name","value","options","expires","d","Date","setTime","getTime","toUTCString","path","updatedCookie","encodeURIComponent","location","protocol","propName","propValue","document","cookie","getCookie","matches","match","RegExp","replace","decodeURIComponent","deleteCookie"],"mappings":";;;;;;;AAsBAA,0CAAO,IAAI,eASHC,UAAY,SAASC,KAAMC,MAAOC,aAE9BC,SADJD,QAAUA,SAAW,IACCC,WACA,iBAAXA,SAAuBA,QAAS,KACnCC,EAAI,IAAIC,KACZD,EAAEE,QAAQF,EAAEG,UAAsB,IAAVJ,SACxBA,QAAUD,QAAQC,QAAUC,EAE5BD,SAAWA,QAAQK,cACnBN,QAAQC,QAAUA,QAAQK,eAE9BN,QAAQO,KAAO,QAEXC,cAAgBV,KAAO,KAD3BC,MAAQU,mBAAmBV,SACqC,WAAtBW,SAASC,SAAwB,UAAY,QAClF,IAAIC,YAAYZ,QAAS,CAC1BQ,eAAiB,KAAOI,aACpBC,UAAYb,QAAQY,WACN,IAAdC,YACAL,eAAiB,IAAMK,WAG/BC,SAASC,OAASP,qBAYf,CACHQ,UAzCY,SAASlB,UACjBmB,QAAUH,SAASC,OAAOG,MAAM,IAAIC,OACpC,WAAarB,KAAKsB,QAAQ,+BAAgC,QAAU,oBAEjEH,QAAUI,mBAAmBJ,QAAQ,IAAM,GAsClDpB,UAAUA,UACVyB,sBAPkBxB,MAClBD,UAAUC,KAAM,GAAI,CAACG,SAAU"}